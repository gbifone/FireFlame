//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbMaterial
// {
//
//   float4 gDiffuseAlbedo;             // Offset:    0 Size:    16
//   float3 gFresnelR0;                 // Offset:   16 Size:    12
//   float gRoughness;                  // Offset:   28 Size:     4
//   float4x4 gMatTransform;            // Offset:   32 Size:    64 [unused]
//   int gUseTexture;                   // Offset:   96 Size:     4
//
// }
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64 [unused]
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  448
//       float FalloffStart;            // Offset:  460
//       float3 Direction;              // Offset:  464
//       float FalloffEnd;              // Offset:  476
//       float3 Position;               // Offset:  480
//       float SpotPower;               // Offset:  492
//
//   } gLights[16];                     // Offset:  448 Size:   768
//   float4 gFogColor;                  // Offset: 1216 Size:    16 [unused]
//   float gFogStart;                   // Offset: 1232 Size:     4 [unused]
//   float gFogRange;                   // Offset: 1236 Size:     4 [unused]
//   float2 reserve;                    // Offset: 1240 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gsamAnisotropicWrap               sampler      NA          NA             s4      1 
// gDiffuseMap                       texture  float4          2d             t0      1 
// cbMaterial                        cbuffer      NA          NA            cb1      1 
// cbPass                            cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[7], immediateIndexed
dcl_constantbuffer CB2[36], immediateIndexed
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 9
if_nz cb1[6].x
  sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s4
  mul r0.xyzw, r0.xyzw, cb1[0].xyzw
  mov o0.w, r0.w
else 
  mov r0.xyz, cb1[0].xyzx
  mov o0.w, cb1[0].w
endif 
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx
add r2.xyz, -v1.xyzx, cb2[24].xyzx
add r3.xyz, v1.xyzx, -cb2[24].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
sqrt r0.w, r0.w
div r2.xyz, r2.xyzx, r0.wwww
add r3.xyzw, -cb1[1].wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
dp3 r0.w, -cb2[29].xyzx, r1.xyzx
max r0.w, r0.w, l(0.000000)
mul r4.xyz, r0.wwww, cb2[28].xyzx
mul r0.w, r3.x, l(256.000000)
add r5.xyz, r2.xyzx, -cb2[29].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
mad r1.w, r3.x, l(256.000000), l(8.000000)
dp3 r2.w, r5.xyzx, r1.xyzx
max r2.w, r2.w, l(0.000000)
log r2.w, r2.w
mul r2.w, r0.w, r2.w
exp r2.w, r2.w
mul r2.w, r1.w, r2.w
mul r2.w, r2.w, l(0.125000)
dp3_sat r3.x, r5.xyzx, -cb2[29].xyzx
add r3.x, -r3.x, l(1.000000)
mul r4.w, r3.x, r3.x
mul r4.w, r4.w, r4.w
mul r3.x, r3.x, r4.w
mad r5.xyz, r3.yzwy, r3.xxxx, cb1[1].xyzx
mul r6.xyz, r2.wwww, r5.xyzx
mad r5.xyz, r5.xyzx, r2.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
div r5.xyz, r6.xyzx, r5.xyzx
add r5.xyz, r0.xyzx, r5.xyzx
dp3 r2.w, -cb2[32].xyzx, r1.xyzx
max r2.w, r2.w, l(0.000000)
mul r6.xyz, r2.wwww, cb2[31].xyzx
add r7.xyz, r2.xyzx, -cb2[32].xyzx
dp3 r2.w, r7.xyzx, r7.xyzx
rsq r2.w, r2.w
mul r7.xyz, r2.wwww, r7.xyzx
dp3 r2.w, r7.xyzx, r1.xyzx
max r2.w, r2.w, l(0.000000)
log r2.w, r2.w
mul r2.w, r0.w, r2.w
exp r2.w, r2.w
mul r2.w, r1.w, r2.w
mul r2.w, r2.w, l(0.125000)
dp3_sat r3.x, r7.xyzx, -cb2[32].xyzx
add r3.x, -r3.x, l(1.000000)
mul r4.w, r3.x, r3.x
mul r4.w, r4.w, r4.w
mul r3.x, r3.x, r4.w
mad r7.xyz, r3.yzwy, r3.xxxx, cb1[1].xyzx
mul r8.xyz, r2.wwww, r7.xyzx
mad r7.xyz, r7.xyzx, r2.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
div r7.xyz, r8.xyzx, r7.xyzx
add r7.xyz, r0.xyzx, r7.xyzx
mul r6.xyz, r6.xyzx, r7.xyzx
mad r4.xyz, r5.xyzx, r4.xyzx, r6.xyzx
dp3 r2.w, -cb2[35].xyzx, r1.xyzx
max r2.w, r2.w, l(0.000000)
mul r5.xyz, r2.wwww, cb2[34].xyzx
add r2.xyz, r2.xyzx, -cb2[35].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r1.x, r2.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
log r1.x, r1.x
mul r0.w, r0.w, r1.x
exp r0.w, r0.w
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, l(0.125000)
dp3_sat r1.x, r2.xyzx, -cb2[35].xyzx
add r1.x, -r1.x, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r1.xyz, r3.yzwy, r1.xxxx, cb1[1].xyzx
mul r2.xyz, r0.wwww, r1.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
div r1.xyz, r2.xyzx, r1.xyzx
add r1.xyz, r0.xyzx, r1.xyzx
mad r1.xyz, r1.xyzx, r5.xyzx, r4.xyzx
mad o0.xyz, cb2[27].xyzx, r0.xyzx, r1.xyzx
ret 
// Approximately 96 instruction slots used
